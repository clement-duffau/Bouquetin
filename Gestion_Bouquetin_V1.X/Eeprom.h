//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//                GESTION EEPROM
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//                Inclusion de fichier
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
#ifndef eeprom_H    /* Guard against multiple inclusion */
#define eeprom_H
//
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//                Définition de constantes
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//      Definition du composant
//
#define taille_eep 32767  //Taille de l'eeprom
#define tp_eep  10     //temps d'enregistrement de l'eeprom en ms
#define adresse_eep  0xA0    //Adresse de l'eeprom sur le bus i2C
//
#define taille_buffer  256    //Taille des buffers eeprom pour ecriture secteurs
//
#define eep_char 1      //Type char pour ecriture eeprom
#define eep_short 2      //Type short pour ecriture eeprom
#define eep_int 4      //Type int pour ecriture eeprom
#define eep_long 4      //Type long pour ecriture eeprom
#define eep_float 4      //Type float pour ecriture eeprom
//
//
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//                Prototypes des fonctions
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//
void tp_1ms_eep(void); //Tempo 1 ms a appeler dans un timer
void gestion_eep(void); //Gestion eeprom a appeler dans la boucle programme
void restaure (void);  //restauration des données eeprom
//
int ecrit_donnee_eep(unsigned long add_eep, unsigned char * ptr_donnee, unsigned short nb_octets_eep); //Ecriture d'une variable en eeprom 
int lit_donnee_eep(unsigned long add_eep, unsigned char * ptr_donnee, unsigned short nb_octets_eep); //Lit une variable en eeprom
int etat_eep(void); //Lecture de l'état de l'eeprom
//
void ecrit_octet_eep(unsigned long, unsigned char); //Ecriture 1 octet en eeprom
unsigned char lit_octet_eep(unsigned long); //Lecture 1 octet en eeprom
void ecrit_secteur_eep(unsigned long, unsigned char); //Raz 1 secteur en eeprom
//
//
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//                Definition ram
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
extern qchar long_char1;
#define val_long_eep long_char1.trlong
#define val_charhhh_eep long_char1.tlong.hhhbyt
#define val_charhh_eep  long_char1.tlong.hhbyt
#define val_charh_eep long_char1.tlong.hbyt
#define val_charl_eep long_char1.tlong.lbyt
//
//  Variables EEPROM
//
extern unsigned char buffer_prom[taille_buffer]; //buffer pour enregistrement eeprom
extern unsigned int tacheprom; //Tache fonction ecriture EEPROM
extern unsigned int compteuroctet; //Compteur octets eeprom
extern unsigned int nboctetprom; //Nombre octet eeprom à enregistrer
extern unsigned int tpprom; //Tempo gestion temps enregistrement eeprom
extern unsigned int adprom; //Indicateur adresse eeprom
//
////////////////////////////////////////////////////////////////////////////////
//
//                    Déclaration des données sauvegardées
//
////////////////////////////////////////////////////////////////////////////////
//
#define splage 0           //Marqueur état eeprom si non programmée !=0xA5 sinon 0xA5
#define smode  60          //
#define stype_det  61          //
#define stp_ferm  62          //
#define slibre  63          //
//
#endif
//